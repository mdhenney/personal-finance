{"version":3,"sources":["features/credit-scores/CreditScoresSlice.ts","features/authentication/AuthenticationSlice.ts","app/Store.ts","features/authentication/UserMenuButton.tsx","features/authentication/LoginCard.tsx","App.tsx","containers/NotFound.tsx","features/credit-scores/CreditScoresCard.tsx","containers/Overview.tsx","components/NavigatingTabs.tsx","containers/Accounts.tsx","containers/Data.tsx","containers/Planning.tsx","containers/Review.tsx","Routes.tsx","index.tsx"],"names":["UserId","authenticationSlice","createSlice","name","initialState","isAuthenticated","disconnect","reducers","setGoogleClientId","state","action","googleClientId","payload","logIn","profile","getBasicProfile","logOut","undefined","actions","scores","Map","Mark","timestamp","Date","score","source","Ivy","creditScoresSlice","updateScore","set","userId","newScore","store","configureStore","reducer","authentication","AuthenticationReducer","creditScores","CreditScoresReducer","connect","user","getGivenName","imageUrl","getImageUrl","dispatch","properties","userImage","className","style","width","height","src","alt","userMenu","icon","onClick","text","content","interactionKind","placement","minimal","margin","response","elevation","Elevation","THREE","disabled","clientId","buttonText","onSuccess","isGoogleLoginResponse","onFailure","result","console","log","cookiePolicy","isSignedIn","navigate","useNavigate","createButton","target","navigationButtons","Group","Heading","Divider","align","Alignment","RIGHT","UserMenuButton","padding","NotFound","markCreditScore","get","ivyCreditScore","TWO","toDateString","Overview","flexDirection","mx","p","CreditScoresCard","NavigatingTabs","defaultTab","children","useState","selectedTabId","setSelectedTabId","useEffect","toString","id","onChange","Accounts","rowHeights","numRows","enableRowResizing","enableColumnResizing","enableMultipleSelection","enableColumnInteractionBar","Data","path","element","Layout","title","panel","Planning","Review","Routes","index","baseUri","URL","document","baseURI","head","getElementsByTagName","namedItem","ReactDOM","render","StrictMode","basename","pathname","getElementById"],"mappings":"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","file":"static/js/main.0253223a.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum UserId {\n    Mark,\n    Ivy\n}\n\nexport interface CreditScoreReport {\n    timestamp: Date,\n    score: number,\n    source: string\n}\n\nexport interface CreditScoreReportUpdate {\n    userId: UserId,\n    newScore: number,\n    source: string\n}\n\nexport interface CreditScoresState {\n  scores: Map<UserId, CreditScoreReport>\n}\n\n// TODO: Temporary data fo testing\nconst initialState: CreditScoresState = {\n    scores: new Map<UserId, CreditScoreReport>(\n        [\n            [ UserId.Mark, { timestamp: new Date(), score: 100, source: 'TransUnion' } ],\n            [ UserId.Ivy, { timestamp: new Date(), score: 200, source: 'Experian' } ]\n        ]\n    )\n};\n\nexport const creditScoresSlice = createSlice({\n    name: 'creditScores',\n    initialState,\n    reducers: {\n        updateScore: (state, action: PayloadAction<CreditScoreReportUpdate>) => {\n            state.scores.set(\n                action.payload.userId,\n                {\n                  timestamp: new Date(),\n                  score: action.payload.newScore,\n                  source: action.payload.source\n              }\n            );\n        }\n    }\n});\n\nexport default creditScoresSlice.reducer;\nexport const { updateScore } = creditScoresSlice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GoogleLoginResponse } from 'react-google-login';\n\nexport interface BasicProfile {\n    getId(): string;\n    getEmail(): string;\n    getName(): string;\n    getGivenName(): string;\n    getFamilyName(): string;\n    getImageUrl(): string;\n}\n  \nexport interface AuthenticationState {\n    googleClientId?: string,\n    isAuthenticated: boolean,\n    profile?: BasicProfile,\n    disconnect: (() => void);\n}\n\nconst initialState: AuthenticationState = {\n    isAuthenticated: false,\n    disconnect: () => {}\n};\n\nexport const authenticationSlice = createSlice({\n    name: 'authentication',\n    initialState,\n    reducers: {\n        setGoogleClientId: (state, action: PayloadAction<string>) => {\n            state.googleClientId = action.payload\n        },\n        logIn: (state, action: PayloadAction<GoogleLoginResponse>) => {\n            state.isAuthenticated = true;\n            state.profile = action.payload.getBasicProfile();\n            state.disconnect = action.payload.disconnect;\n        },\n        logOut: (state) => {\n            state.disconnect();\n            \n            state.isAuthenticated = false;\n            state.profile = undefined;\n            state.disconnect = () => {};\n        }\n    }\n});\n\nexport default authenticationSlice.reducer;\nexport const { logIn, logOut, setGoogleClientId } = authenticationSlice.actions;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport AuthenticationReducer from '../features/authentication/AuthenticationSlice';\nimport CreditScoresReducer from '../features/credit-scores/CreditScoresSlice';\n\nexport const store = configureStore({\n  reducer: {\n    authentication: AuthenticationReducer,\n    creditScores: CreditScoresReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { connect } from \"react-redux\";\n\nimport { Button, Menu, MenuItem } from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\n\nimport { RootState, AppDispatch } from '../../app/Store';\nimport { logOut } from \"./AuthenticationSlice\";\n\nconst mapState = (state: RootState) => ({\n    isAuthenticated: state.authentication.isAuthenticated,\n    user: {\n      name: state.authentication.profile?.getGivenName() || \"unknown\",\n      imageUrl: state.authentication.profile?.getImageUrl() || \"\"\n    }\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    logOut: () => dispatch(logOut())\n});\n\ntype LoggedInUserButtonProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst LoggedInUserButton = (properties: LoggedInUserButtonProperties) => {\n    if (!properties.isAuthenticated) {\n        return <div />;\n    }\n    \n    const userImage = <img className=\"rounded\" style={{ width: '25px', height: '25px' }} src={properties.user.imageUrl} alt=\"\" />;\n\n    const userMenu = (\n      <Menu>\n        <MenuItem icon=\"log-out\" onClick={properties.logOut} text=\"Log Out\" />\n      </Menu>\n    );\n\n    return (\n      <Popover2\n        content={userMenu}\n        interactionKind=\"click\"\n        placement=\"bottom-end\"\n        minimal={true}>\n          <Button style={{ margin: 0}} className=\"bp3-minimal\" icon={userImage} text={properties.user.name} />\n      </Popover2>\n    );\n};\n\nexport default connect(mapState, mapDispatch)(LoggedInUserButton);\n","import { connect } from 'react-redux';\n\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\n\nimport { RootState, AppDispatch } from '../../app/Store';\nimport { logIn } from './AuthenticationSlice';\n\nfunction isGoogleLoginResponse(response: GoogleLoginResponse | GoogleLoginResponseOffline): response is GoogleLoginResponse {\n  return (response as GoogleLoginResponse).getBasicProfile !== undefined;\n}\n\nconst mapState = (state: RootState) => ({\n  googleClientId: state.authentication.googleClientId,\n  isAuthenticated: state.authentication.isAuthenticated\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n  logIn: (response: GoogleLoginResponse) => dispatch(logIn(response))\n});\n\ntype LoginCardProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst LoginCard = (properties: LoginCardProperties) => {\n    function onSuccess(response: GoogleLoginResponse | GoogleLoginResponseOffline) {\n      if (isGoogleLoginResponse(response)) {\n        properties.logIn(response);\n      }\n    }\n\n    function onFailure(result: any) {\n      console.log(\"Login Failed\", result);\n    }\n\n    return (\n      <div className='loginCardContainer'>\n        <Card elevation={Elevation.THREE}>\n          <h2>Sign In</h2>\n          <p>Authentication is required to use this application.</p>\n\n          <div className=\"buttonContainer\">\n            <GoogleLogin\n              disabled={properties.googleClientId === undefined}\n              clientId={properties.googleClientId || \"\"}\n              buttonText='Authenticate With Google'\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n              cookiePolicy={'single_host_origin'}\n              isSignedIn={true} />\n            </div>\n        </Card>\n      </div>\n    );\n};\n\nexport default connect(mapState, mapDispatch)(LoginCard);\n","import './App.css';\n\nimport { connect } from 'react-redux';\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { Button, Navbar, IconName, Alignment } from \"@blueprintjs/core\";\n\nimport UserMenuButton from './features/authentication/UserMenuButton';\nimport LoginCard from './features/authentication/LoginCard';\nimport { RootState, AppDispatch } from './app/Store';\n\nconst mapState = (state: RootState) => ({\n    isAuthenticated: state.authentication.isAuthenticated\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({});\n\ntype AppProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst App = (properties: AppProperties) => {\n  const navigate = useNavigate();\n\n  function createButton(name: string, icon: IconName, target: string) {\n    return <Button key={name} className=\"bp3-minimal\" icon={icon} text={name} disabled={!properties.isAuthenticated} onClick={() => navigate(target)}/>\n  }\n\n  const navigationButtons = [\n    createButton(\"Overview\", \"home\", \"/\"),\n    createButton(\"Data\", \"database\", \"/data\"),\n    createButton(\"Planning\", \"chart\", \"/planning\"),\n    createButton(\"Review\", \"endorsed\", \"/review\")\n  ]\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>Personal Finance</Navbar.Heading>\n          <Navbar.Divider />\n          {navigationButtons}\n        </Navbar.Group>\n\n        <Navbar.Group align={Alignment.RIGHT}>\n          <UserMenuButton />\n        </Navbar.Group>\n      </Navbar>\n\n      <div style={{ padding: \"0 50px\" }}>\n        { properties.isAuthenticated ? <Outlet /> : <LoginCard /> }\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapState, mapDispatch)(App);\n","\nexport default function NotFound() {\n    return (<div>Page Not Found</div>);\n}\n","import { connect } from 'react-redux';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { AppDispatch, RootState } from '../../app/Store';\nimport { UserId } from './CreditScoresSlice';\n\n// TODO: Don't hard-code names\nconst mapState = (state: RootState) => ({\n    markCreditScore: state.creditScores.scores.get(UserId.Mark),\n    ivyCreditScore: state.creditScores.scores.get(UserId.Ivy)\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({});\n\ntype CreditScoresProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst CreditScores = (properties: CreditScoresProperties) => {\n    return (\n      <Card elevation={Elevation.TWO}>\n        <h1>Credit Scores</h1>\n        <p>Mark: {properties.markCreditScore?.score} (Last Updated {properties.markCreditScore?.timestamp.toDateString()})</p>\n        <p>Ivy: {properties.ivyCreditScore?.score} (Last Updated {properties.ivyCreditScore?.timestamp.toDateString()})</p>\n      </Card>\n    );\n};\n\n\nexport default connect(mapState, mapDispatch)(CreditScores);\n","\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { Flex, Box } from 'reflexbox';\n\nimport CreditScoresCard from '../features/credit-scores/CreditScoresCard';\n\nexport default function Overview() {\n    return (\n      <Flex flexDirection=\"column\">\n        <Flex>\n          <Box mx={2} p={2} width={1/3}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Tasks</h1>\n              <p>TBD - Last Reviewed / Next Review / Notes / Tasks</p>\n            </Card>\n          </Box>\n          <Box mx={2} p={2} width={1/3}>\n            <CreditScoresCard />\n          </Box>\n          <Box mx={2} p={2} width={1/3}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Net Worth</h1>\n              <p>TBD - Summary and chart</p>\n            </Card>\n          </Box>\n        </Flex>\n\n        <Flex>\n          <Box mx={2} p={2} width={1/2}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Cash Flow</h1>\n              <p>TBD - Income / Expenses</p>\n            </Card>\n          </Box>\n          <Box mx={2} p={2} width={1/2}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Assets and Debts</h1>\n              <p>Coming Soon</p>\n            </Card>\n          </Box>\n        </Flex>\n\n        <Flex>\n          <Box mx={2} p={2} width={1/2}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Goals</h1>\n              <p>Coming Soon</p>\n            </Card>\n          </Box>\n          <Box mx={2} p={2} width={1/2}>\n            <Card elevation={Elevation.TWO}>\n              <h1>Budget</h1>\n              <p>Coming Soon</p>\n            </Card>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n}\n\n/* <li>Credit scores</li>\n<li>Last reviewed date</li>\n<li>Income for past year/quarter/month; and predicted income</li>\n<li>Expenses by category for past year/quarter/month; and budget</li>\n<li>Assets and debts; change over past year/quarter; and predicated</li>\n<li>Goals and progress</li> */","import { ReactElement, useEffect, useState } from \"react\";\n\nimport { Tabs, TabId } from \"@blueprintjs/core\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NavigatingTabs({ name, defaultTab, children }: { name: string, defaultTab: TabId, children: ReactElement[] }) {\n    const navigate = useNavigate();\n    const [ selectedTabId, setSelectedTabId ] = useState(defaultTab as TabId);\n\n    useEffect(\n        () => navigate(selectedTabId.toString()),\n        [ navigate, selectedTabId ]\n    );\n\n    return (\n      <Tabs id={name} onChange={setSelectedTabId} selectedTabId={selectedTabId}>\n        {children}\n      </Tabs>\n    );\n}\n","import { Column, Table2 } from \"@blueprintjs/table\";\n\nexport default function Accounts() {\n    return <Table2 rowHeights={[ 35, 35, 35, 35, 35 ]} numRows={5} enableRowResizing={false} enableColumnResizing={false} enableMultipleSelection={false} enableColumnInteractionBar={false}>\n        <Column name=\"Column 1\" />\n        <Column name=\"Column 2\" />\n        <Column name=\"Column 3\" />\n    </Table2>\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport Accounts from './Accounts'\nimport NotFound from './NotFound'\n\nexport default function Data() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"accounts\" element={<Accounts />} />\n          <Route path=\"income\" element={<div>TBD - Income</div>} />\n          <Route path=\"recurring-payments\" element={<div>TBD - Recurring</div>} />\n          <Route path=\"investments\" element={<div>TBD - Investments</div>} />\n          <Route path=\"assets\" element={<div>TBD - Assets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Data\" defaultTab=\"accounts\">\n        <Tab id=\"accounts\" title=\"Accounts\" panel={<Outlet />} />\n        <Tab id=\"income\" title=\"Income\" panel={<Outlet />} />\n        <Tab id=\"recurring-payments\" title=\"Recurring Payments\" panel={<Outlet />} />\n        <Tab id=\"investments\" title=\"Investments\" panel={<Outlet />} />\n        <Tab id=\"assets\" title=\"Assets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Planning() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"goals\" element={<div>TBD - Goals </div>} />\n          <Route path=\"large-purchases\" element={<div>TBD - Large Purchases</div>} />\n          <Route path=\"budgets\" element={<div>TBD - Budgets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Planning\" defaultTab=\"goals\">\n        <Tab id=\"goals\" title=\"Goals\" panel={<Outlet />} />\n        <Tab id=\"large-purchases\" title=\"Large Purchases\" panel={<Outlet />} />\n        <Tab id=\"budgets\" title=\"Budgets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Review() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"balances\" element={<div>TBD - Balances</div>} />\n          <Route path=\"spending\" element={<div>TBD - Spending</div>} />\n          <Route path=\"monthly-clearing\" element={<div>TBD - Monthly Clearing</div>} />\n          <Route path=\"quarterly-review\" element={<div>TBD - Quarterly Review</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Review\" defaultTab=\"balances\">\n        <Tab id=\"balances\" title=\"Balances\" panel={<Outlet />} />\n        <Tab id=\"spending\" title=\"Spending\" panel={<Outlet />} />\n        <Tab id=\"monthly-clearing\" title=\"Monthly Clearing\" panel={<Outlet />} />\n        <Tab id=\"quarterly-review\" title=\"Quarterly Review\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes as RoutesCollection, Route } from \"react-router-dom\";\n\nimport App from './App';\nimport NotFound from \"./containers/NotFound\";\n\nimport Overview from \"./containers/Overview\";\nimport Data from \"./containers/Data\";\nimport Planning from \"./containers/Planning\";\nimport Review from \"./containers/Review\";\n\nexport default function Routes() {\n  return (\n    <RoutesCollection>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Overview />} />\n        <Route path=\"data/*\" element={<Data />} />\n        <Route path=\"planning/*\" element={<Planning />} />\n        <Route path=\"review/*\" element={<Review />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </RoutesCollection>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { store } from './app/Store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport Routes from './Routes'\nimport { setGoogleClientId } from './features/authentication/AuthenticationSlice';\n\nconst baseUri = new URL(document.baseURI);\nconst googleClientId = document.head.getElementsByTagName('meta').namedItem(\"google-signin-client_id\")?.content || \"\";\n\nstore.dispatch(setGoogleClientId(googleClientId));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={baseUri.pathname}>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}