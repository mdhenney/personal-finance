{"version":3,"sources":["features/credit-scores/CreditScoresSlice.ts","features/authentication/AuthenticationHooks.tsx","app/Store.ts","features/authentication/UserMenuButton.tsx","features/authentication/LoginCard.tsx","App.tsx","app/Hooks.ts","features/credit-scores/CreditScoresCard.tsx","containers/Overview.tsx","components/NavigatingTabs.tsx","containers/Accounts.tsx","containers/NotFound.tsx","containers/Data.tsx","containers/Planning.tsx","containers/Review.tsx","Routes.tsx","index.tsx"],"names":["UserId","AuthState","initialState","scores","Map","Mark","timestamp","Date","score","source","Ivy","creditScoresSlice","createSlice","name","reducers","updateScore","state","action","set","payload","userId","newScore","store","actions","configureStore","reducer","creditScores","CreditScoresReducer","authContext","createContext","authState","INITIALIZING","useAuth","useContext","AuthProvider","clientId","children","auth","useState","setAuthState","userProfile","setUserProfile","google","useGoogleLogin","isSignedIn","useEffect","loaded","NOT_AUTHENTICATED","signIn","AUTHENTICATED","signOut","createAuth","Provider","value","LoggedInUserButton","useGoogleLogout","onLogoutSuccess","userImage","className","style","width","height","src","profileImageUrl","alt","userMenu","icon","onClick","text","content","interactionKind","placement","minimal","margin","firstName","LoginCard","failureMessage","setFailureMessage","intent","size","SpinnerSize","STANDARD","elevation","Elevation","THREE","color","buttonText","onSuccess","response","undefined","getBasicProfile","isGoogleLoginResponse","basicProfile","username","getId","getGivenName","lastName","getFamilyName","email","getEmail","getImageUrl","tokenId","getAuthResponse","id_token","onFailure","result","cookiePolicy","App","navigate","useNavigate","createButton","target","disabled","navigationButtons","Group","Heading","Divider","align","Alignment","RIGHT","padding","useAppSelector","useSelector","CreditScores","sortedScores","Array","from","map","entry","creditScoreReport","sort","user1","user2","TWO","toDateString","Overview","flexDirection","mx","p","NavigatingTabs","defaultTab","selectedTabId","setSelectedTabId","toString","id","onChange","Accounts","rowHeights","numRows","enableRowResizing","enableColumnResizing","enableMultipleSelection","enableColumnInteractionBar","NotFound","Data","path","element","Layout","title","panel","Planning","Review","Routes","index","baseUri","URL","document","baseURI","head","getElementsByTagName","namedItem","ReactDOM","render","StrictMode","basename","pathname","getElementById"],"mappings":"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","file":"static/js/main.37df59e1.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum UserId {\n  Mark,\n  Ivy\n}\n\nexport interface CreditScoreReport {\n  timestamp: Date;\n  score: number;\n  source: string;\n}\n\nexport interface CreditScoreReportUpdate {\n  userId: UserId;\n  newScore: number;\n  source: string;\n}\n\nexport interface CreditScoresState {\n  scores: Map<UserId, CreditScoreReport>;\n}\n\n// TODO: Temporary data for testing\nconst initialState: CreditScoresState = {\n  scores: new Map<UserId, CreditScoreReport>([\n    [UserId.Mark, { timestamp: new Date(), score: 100, source: 'TransUnion' }],\n    [UserId.Ivy, { timestamp: new Date(), score: 200, source: 'Experian' }]\n  ])\n};\n\nexport const creditScoresSlice = createSlice({\n  name: 'creditScores',\n  initialState,\n  reducers: {\n    updateScore: (state, action: PayloadAction<CreditScoreReportUpdate>) => {\n      state.scores.set(action.payload.userId, {\n        timestamp: new Date(),\n        score: action.payload.newScore,\n        source: action.payload.source\n      });\n    }\n  }\n});\n\nexport default creditScoresSlice.reducer;\nexport const { updateScore } = creditScoresSlice.actions;\n","import { useContext, createContext, ReactElement, ReactNode, useState, useEffect } from 'react';\nimport { useGoogleLogin } from 'react-google-login';\n\nexport enum AuthState {\n  INITIALIZING,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED\n}\n\nexport interface UserProfile {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  profileImageUrl: string;\n  tokenId: string;\n}\n\nexport type AuthContextVariables = {\n  authState: AuthState;\n  userProfile?: UserProfile;\n  clientId?: string;\n  signIn?: (userProfile: UserProfile) => void;\n  signOut?: () => void;\n};\n\nconst authContext = createContext<AuthContextVariables>({ authState: AuthState.INITIALIZING });\n\nexport function useAuth(): AuthContextVariables {\n  return useContext(authContext);\n}\n\nexport type AuthProviderProperties = {\n  clientId: string;\n  children: ReactNode | ReactNode[];\n};\n\nexport function AuthProvider({ clientId, children }: AuthProviderProperties): ReactElement {\n  const auth = createAuth(clientId);\n\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nfunction createAuth(clientId: string): AuthContextVariables {\n  const [authState, setAuthState] = useState(AuthState.INITIALIZING);\n  const [userProfile, setUserProfile] = useState({} as UserProfile);\n\n  const google = useGoogleLogin({ clientId: clientId || '', isSignedIn: true });\n\n  useEffect(() => {\n    if (google.loaded && authState == AuthState.INITIALIZING) {\n      setAuthState(AuthState.NOT_AUTHENTICATED);\n    }\n  }, [google.loaded, authState]);\n\n  const signIn = (userProfile: UserProfile) => {\n    setUserProfile(userProfile);\n    setAuthState(AuthState.AUTHENTICATED);\n  };\n\n  const signOut = () => {\n    setAuthState(AuthState.NOT_AUTHENTICATED);\n  };\n\n  return { authState, userProfile, clientId, signIn, signOut };\n}\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport CreditScoresReducer from '../features/credit-scores/CreditScoresSlice';\n\nexport const store = configureStore({\n  reducer: {\n    creditScores: CreditScoresReducer\n  }\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { ReactElement } from 'react';\nimport { useGoogleLogout } from 'react-google-login';\n\nimport { Button, Menu, MenuItem } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport { AuthState, useAuth } from './AuthenticationHooks';\n\nexport default function LoggedInUserButton(): ReactElement {\n  const { authState, userProfile, clientId, signOut } = useAuth();\n  const google = useGoogleLogout({ clientId: clientId || '', onLogoutSuccess: signOut });\n\n  if (authState !== AuthState.AUTHENTICATED) {\n    return <div />;\n  }\n\n  const userImage = (\n    <img\n      className=\"rounded\"\n      style={{ width: '25px', height: '25px' }}\n      src={userProfile?.profileImageUrl}\n      alt=\"\"\n    />\n  );\n\n  const userMenu = (\n    <Menu>\n      <MenuItem icon=\"log-out\" onClick={google.signOut} text=\"Log Out\" />\n    </Menu>\n  );\n\n  return (\n    <Popover2 content={userMenu} interactionKind=\"click\" placement=\"bottom-end\" minimal={true}>\n      <Button\n        style={{ margin: 0 }}\n        className=\"bp3-minimal\"\n        icon={userImage}\n        text={userProfile?.firstName}\n      />\n    </Popover2>\n  );\n}\n","import { ReactElement, useState } from 'react';\n\nimport { Card, Elevation, Spinner, SpinnerSize } from '@blueprintjs/core';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\n\nimport { AuthState, useAuth, UserProfile } from './AuthenticationHooks';\n\nexport default function LoginCard(): ReactElement {\n  const { authState, clientId, signIn } = useAuth();\n  const [failureMessage, setFailureMessage] = useState('');\n\n  function onSuccess(response: GoogleLoginResponse | GoogleLoginResponseOffline) {\n    if (isGoogleLoginResponse(response)) {\n      const basicProfile = response.getBasicProfile();\n\n      const userProfile: UserProfile = {\n        username: basicProfile.getId(),\n        firstName: basicProfile.getGivenName(),\n        lastName: basicProfile.getFamilyName(),\n        email: basicProfile.getEmail(),\n        profileImageUrl: basicProfile.getImageUrl(),\n        tokenId: response.getAuthResponse().id_token\n      };\n\n      if (signIn) {\n        signIn(userProfile);\n      }\n    }\n  }\n\n  function onFailure(result: unknown) {\n    setFailureMessage('Login Failed: ' + result);\n  }\n\n  return (\n    <div className=\"loginCardContainer\">\n      {authState === AuthState.INITIALIZING ? (\n        <Spinner intent=\"primary\" size={SpinnerSize.STANDARD} />\n      ) : (\n        <Card elevation={Elevation.THREE}>\n          <h2>Sign In</h2>\n          <p>Authentication is required to use this application.</p>\n\n          {failureMessage && <p style={{ color: 'red' }}>{failureMessage}</p>}\n\n          {(clientId && (\n            <div className=\"buttonContainer\">\n              <GoogleLogin\n                clientId={clientId || ''}\n                buttonText=\"Authenticate With Google\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={true}\n              />\n            </div>\n          )) || <p style={{ color: 'red' }}>Missing Client ID</p>}\n        </Card>\n      )}\n    </div>\n  );\n}\n\nfunction isGoogleLoginResponse(\n  response: GoogleLoginResponse | GoogleLoginResponseOffline\n): response is GoogleLoginResponse {\n  return (response as GoogleLoginResponse).getBasicProfile !== undefined;\n}\n","import './App.css';\n\nimport { ReactElement } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nimport { Button, Navbar, IconName, Alignment } from '@blueprintjs/core';\n\nimport { AuthState, useAuth } from './features/authentication/AuthenticationHooks';\n\nimport UserMenuButton from './features/authentication/UserMenuButton';\nimport LoginCard from './features/authentication/LoginCard';\n\nexport default function App(): ReactElement {\n  const { authState } = useAuth();\n  const navigate = useNavigate();\n\n  function createButton(name: string, icon: IconName, target: string) {\n    return (\n      <Button\n        key={name}\n        className=\"bp3-minimal\"\n        icon={icon}\n        text={name}\n        disabled={authState !== AuthState.AUTHENTICATED}\n        onClick={() => navigate(target)}\n      />\n    );\n  }\n\n  const navigationButtons = [\n    createButton('Overview', 'home', '/'),\n    createButton('Data', 'database', '/data'),\n    createButton('Planning', 'chart', '/planning'),\n    createButton('Review', 'endorsed', '/review')\n  ];\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>Personal Finance</Navbar.Heading>\n          <Navbar.Divider />\n          {navigationButtons}\n        </Navbar.Group>\n\n        <Navbar.Group align={Alignment.RIGHT}>\n          <UserMenuButton />\n        </Navbar.Group>\n      </Navbar>\n\n      <div style={{ padding: '0 50px' }}>\n        {authState === AuthState.AUTHENTICATED ? <Outlet /> : <LoginCard />}\n      </div>\n    </div>\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './Store';\n\nexport const useAppDispatch: () => AppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ReactElement } from 'react';\nimport { useAppSelector } from '../../app/Hooks';\n\nimport { Card, Elevation } from '@blueprintjs/core';\n\nexport default function CreditScores(): ReactElement {\n  const scores = useAppSelector((state) => state.creditScores.scores);\n  const sortedScores = Array.from(scores)\n    .map((entry) => ({ userId: entry[0], creditScoreReport: entry[1] }))\n    .sort((user1, user2) => user1.userId - user2.userId);\n\n  // TODO: this displays '0:'\n  return (\n    <Card elevation={Elevation.TWO}>\n      <h1>Credit Scores</h1>\n      {sortedScores.map((score) => (\n        <p key={score.userId}>\n          {score.userId}: {score.creditScoreReport.score} (\n          {score.creditScoreReport.timestamp.toDateString()})\n        </p>\n      ))}\n    </Card>\n  );\n}\n","import { ReactElement } from 'react';\n\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { Flex, Box } from 'reflexbox';\n\nimport CreditScoresCard from '../features/credit-scores/CreditScoresCard';\n\nexport default function Overview(): ReactElement {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex>\n        <Box mx={2} p={2} width={1 / 3}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Tasks</h1>\n            <p>TBD - Last Reviewed / Next Review / Notes / Tasks</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 3}>\n          <CreditScoresCard />\n        </Box>\n        <Box mx={2} p={2} width={1 / 3}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Net Worth</h1>\n            <p>TBD - Summary and chart</p>\n          </Card>\n        </Box>\n      </Flex>\n\n      <Flex>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Cash Flow</h1>\n            <p>TBD - Income / Expenses</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Assets and Debts</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n      </Flex>\n\n      <Flex>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Goals</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Budget</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n","import { ReactElement, useEffect, useState } from 'react';\n\nimport { Tabs, TabId } from '@blueprintjs/core';\nimport { useNavigate } from 'react-router-dom';\n\nexport type NavigatingTabsProperties = {\n  name: string;\n  defaultTab: TabId;\n  children: ReactElement[];\n};\n\nexport default function NavigatingTabs({\n  name,\n  defaultTab,\n  children\n}: NavigatingTabsProperties): ReactElement {\n  const navigate = useNavigate();\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab as TabId);\n\n  useEffect(() => navigate(selectedTabId.toString()), [navigate, selectedTabId]);\n\n  return (\n    <Tabs id={name} onChange={setSelectedTabId} selectedTabId={selectedTabId}>\n      {children}\n    </Tabs>\n  );\n}\n","import { ReactElement } from 'react';\n\nimport { Column, Table2 } from '@blueprintjs/table';\n\nexport default function Accounts(): ReactElement {\n  return (\n    <Table2\n      rowHeights={[35, 35, 35, 35, 35]}\n      numRows={5}\n      enableRowResizing={false}\n      enableColumnResizing={false}\n      enableMultipleSelection={false}\n      enableColumnInteractionBar={false}>\n      <Column name=\"Column 1\" />\n      <Column name=\"Column 2\" />\n      <Column name=\"Column 3\" />\n    </Table2>\n  );\n}\n","import { ReactElement } from 'react';\n\nexport default function NotFound(): ReactElement {\n  return <div>Page Not Found</div>;\n}\n","import { ReactElement } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport Accounts from './Accounts';\nimport NotFound from './NotFound';\n\nexport default function Data(): ReactElement {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"accounts\" element={<Accounts />} />\n        <Route path=\"income\" element={<div>TBD - Income</div>} />\n        <Route path=\"recurring-payments\" element={<div>TBD - Recurring</div>} />\n        <Route path=\"investments\" element={<div>TBD - Investments</div>} />\n        <Route path=\"assets\" element={<div>TBD - Assets</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n}\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Data\" defaultTab=\"accounts\">\n      <Tab id=\"accounts\" title=\"Accounts\" panel={<Outlet />} />\n      <Tab id=\"income\" title=\"Income\" panel={<Outlet />} />\n      <Tab id=\"recurring-payments\" title=\"Recurring Payments\" panel={<Outlet />} />\n      <Tab id=\"investments\" title=\"Investments\" panel={<Outlet />} />\n      <Tab id=\"assets\" title=\"Assets\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n","import { ReactElement } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport NotFound from './NotFound';\n\nexport default function Planning(): ReactElement {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"goals\" element={<div>TBD - Goals </div>} />\n        <Route path=\"large-purchases\" element={<div>TBD - Large Purchases</div>} />\n        <Route path=\"budgets\" element={<div>TBD - Budgets</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n}\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Planning\" defaultTab=\"goals\">\n      <Tab id=\"goals\" title=\"Goals\" panel={<Outlet />} />\n      <Tab id=\"large-purchases\" title=\"Large Purchases\" panel={<Outlet />} />\n      <Tab id=\"budgets\" title=\"Budgets\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n","import { ReactElement } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport NotFound from './NotFound';\n\nexport default function Review(): ReactElement {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"balances\" element={<div>TBD - Balances</div>} />\n        <Route path=\"spending\" element={<div>TBD - Spending</div>} />\n        <Route path=\"monthly-clearing\" element={<div>TBD - Monthly Clearing</div>} />\n        <Route path=\"quarterly-review\" element={<div>TBD - Quarterly Review</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n}\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Review\" defaultTab=\"balances\">\n      <Tab id=\"balances\" title=\"Balances\" panel={<Outlet />} />\n      <Tab id=\"spending\" title=\"Spending\" panel={<Outlet />} />\n      <Tab id=\"monthly-clearing\" title=\"Monthly Clearing\" panel={<Outlet />} />\n      <Tab id=\"quarterly-review\" title=\"Quarterly Review\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n","import { ReactElement } from 'react';\nimport { Routes as RoutesCollection, Route } from 'react-router-dom';\n\nimport App from './App';\n\nimport Overview from './containers/Overview';\nimport Data from './containers/Data';\nimport Planning from './containers/Planning';\nimport Review from './containers/Review';\nimport NotFound from './containers/NotFound';\n\nexport default function Routes(): ReactElement {\n  return (\n    <RoutesCollection>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Overview />} />\n        <Route path=\"data/*\" element={<Data />} />\n        <Route path=\"planning/*\" element={<Planning />} />\n        <Route path=\"review/*\" element={<Review />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </RoutesCollection>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport { store } from './app/Store';\nimport Routes from './Routes';\nimport { AuthProvider } from './features/authentication/AuthenticationHooks';\n\nconst baseUri = new URL(document.baseURI);\nconst metaTags = document.head.getElementsByTagName('meta');\nconst clientId = metaTags.namedItem('google-signin-client_id')?.content || '';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AuthProvider clientId={clientId}>\n        <BrowserRouter basename={baseUri.pathname}>\n          <Routes />\n        </BrowserRouter>\n      </AuthProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}