{"version":3,"sources":["app/store.ts","App.tsx","containers/NotFound.tsx","containers/Overview.tsx","containers/Login.tsx","components/NavigatingTabs.tsx","containers/Accounts.tsx","containers/Data.tsx","containers/Planning.tsx","containers/Review.tsx","Routes.tsx","index.tsx"],"names":["store","configureStore","reducer","App","navigate","useNavigate","createButton","name","icon","target","className","text","onClick","navigationButtons","Group","Heading","Divider","align","Alignment","RIGHT","style","padding","NotFound","Overview","Login","onLoggedIn","useState","clientId","setClientId","type","value","onChange","event","buttonText","onSuccess","result","console","log","profileObj","onFailure","cookiePolicy","isSignedIn","NavigatingTabs","defaultTab","children","selectedTabId","setSelectedTabId","useEffect","toString","id","Accounts","rowHeights","numRows","enableRowResizing","enableColumnResizing","enableMultipleSelection","enableColumnInteractionBar","Data","path","element","Layout","title","panel","Planning","Review","Routes","loggedIn","setLoggedIn","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIaA,EAAQC,YAAe,CAClCC,QAAS,K,yECAI,SAASC,IACtB,IAAMC,EAAWC,cAEjB,SAASC,EAAaC,EAAcC,EAAgBC,GAClD,OAAO,cAAC,IAAD,CAAmBC,UAAU,cAAcF,KAAMA,EAAMG,KAAMJ,EAAMK,QAAS,kBAAMR,EAASK,KAA9EF,GAGtB,IAAMM,EAAoB,CACxBP,EAAa,WAAY,OAAQ,KACjCA,EAAa,OAAQ,WAAY,SACjCA,EAAa,WAAY,QAAS,aAClCA,EAAa,SAAU,WAAY,YAGrC,OACE,sBAAKI,UAAU,MAAf,UACE,eAAC,IAAD,CAAQA,UAAU,WAAlB,UACE,eAAC,IAAOI,MAAR,WACE,cAAC,IAAOC,QAAR,+BACA,cAAC,IAAOC,QAAR,IACCH,KAGH,cAAC,IAAOC,MAAR,CAAcG,MAAOC,IAAUC,MAA/B,SACE,cAAC,IAAD,CAAQT,UAAU,mCAItB,qBAAKU,MAAO,CAAEC,QAAS,UAAvB,SACE,cAAC,IAAD,SCjCO,SAASC,IACpB,OAAQ,iDCDG,SAASC,IACpB,OACE,gCACE,sEACA,+BACI,+CACA,oDACA,0FACA,8FACA,iGACA,0D,YCRG,SAASC,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,WAC5B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,OACE,gCACE,uBAAOC,KAAK,OAAOC,MAAOH,EAAUI,SAAU,SAAAC,GAAK,OAAIJ,EAAYI,EAAMvB,OAAOqB,UAEhF,cAAC,cAAD,CACIH,SAAUA,EACVM,WAAW,2BACXC,UAhBR,SAAmBC,GACfC,QAAQC,IAAI,YAAaF,EAAOG,YAChCb,KAeIc,UAZR,SAAmBJ,GACfC,QAAQC,IAAI,eAAgBF,IAYxBK,aAAc,qBACdC,YAAY,OCpBT,SAASC,EAAT,GAAwH,IAA9FnC,EAA6F,EAA7FA,KAAMoC,EAAuF,EAAvFA,WAAYC,EAA2E,EAA3EA,SACjDxC,EAAWC,cACjB,EAA4CqB,mBAASiB,GAArD,mBAAQE,EAAR,KAAuBC,EAAvB,KAOA,OALAC,qBACI,kBAAM3C,EAASyC,EAAcG,cAC7B,CAAE5C,EAAUyC,IAId,cAAC,IAAD,CAAMI,GAAI1C,EAAMwB,SAAUe,EAAkBD,cAAeA,EAA3D,SACGD,I,qBCdM,SAASM,IACpB,OAAO,eAAC,IAAD,CAAQC,WAAY,CAAE,GAAI,GAAI,GAAI,GAAI,IAAMC,QAAS,EAAGC,mBAAmB,EAAOC,sBAAsB,EAAOC,yBAAyB,EAAOC,4BAA4B,EAA3K,UACH,cAAC,IAAD,CAAQjD,KAAK,aACb,cAAC,IAAD,CAAQA,KAAK,aACb,cAAC,IAAD,CAAQA,KAAK,gBCCN,SAASkD,IACpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOF,KAAK,WAAWC,QAAS,cAACT,EAAD,MAChC,cAAC,IAAD,CAAOQ,KAAK,SAASC,QAAS,iDAC9B,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,oDAC1C,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,sDACnC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,iDAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACrC,EAAD,WAMnC,SAASsC,IACL,OACE,eAAClB,EAAD,CAAgBnC,KAAK,OAAOoC,WAAW,WAAvC,UACE,cAAC,IAAD,CAAKM,GAAG,WAAWY,MAAM,WAAWC,MAAO,cAAC,IAAD,MAC3C,cAAC,IAAD,CAAKb,GAAG,SAASY,MAAM,SAASC,MAAO,cAAC,IAAD,MACvC,cAAC,IAAD,CAAKb,GAAG,qBAAqBY,MAAM,qBAAqBC,MAAO,cAAC,IAAD,MAC/D,cAAC,IAAD,CAAKb,GAAG,cAAcY,MAAM,cAAcC,MAAO,cAAC,IAAD,MACjD,cAAC,IAAD,CAAKb,GAAG,SAASY,MAAM,SAASC,MAAO,cAAC,IAAD,SCvBhC,SAASC,IACpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOL,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,iDAC7B,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,0DACvC,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,kDAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACrC,EAAD,WAMnC,SAASsC,IACL,OACE,eAAClB,EAAD,CAAgBnC,KAAK,WAAWoC,WAAW,QAA3C,UACE,cAAC,IAAD,CAAKM,GAAG,QAAQY,MAAM,QAAQC,MAAO,cAAC,IAAD,MACrC,cAAC,IAAD,CAAKb,GAAG,kBAAkBY,MAAM,kBAAkBC,MAAO,cAAC,IAAD,MACzD,cAAC,IAAD,CAAKb,GAAG,UAAUY,MAAM,UAAUC,MAAO,cAAC,IAAD,SClBlC,SAASE,IACpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAON,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,mDAChC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,mDAChC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,2DACxC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,2DACxC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACrC,EAAD,WAMnC,SAASsC,IACL,OACE,eAAClB,EAAD,CAAgBnC,KAAK,SAASoC,WAAW,WAAzC,UACE,cAAC,IAAD,CAAKM,GAAG,WAAWY,MAAM,WAAWC,MAAO,cAAC,IAAD,MAC3C,cAAC,IAAD,CAAKb,GAAG,WAAWY,MAAM,WAAWC,MAAO,cAAC,IAAD,MAC3C,cAAC,IAAD,CAAKb,GAAG,mBAAmBY,MAAM,mBAAmBC,MAAO,cAAC,IAAD,MAC3D,cAAC,IAAD,CAAKb,GAAG,mBAAmBY,MAAM,mBAAmBC,MAAO,cAAC,IAAD,SCdpD,SAASG,IACtB,IAAM7D,EAAWC,cACjB,EAAkCqB,oBAAS,GAA3C,mBAAQwC,EAAR,KAAkBC,EAAlB,KAWA,OATApB,qBACE,WACOmB,GACH9D,EAAS,WAGb,CAAEA,EAAU8D,IAIZ,cAAC,IAAD,UACE,eAAC,IAAD,CAAOR,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOS,OAAK,EAACT,QAAS,cAACpC,EAAD,MACtB,cAAC,IAAD,CAAOmC,KAAK,QAAQC,QAAS,cAACnC,EAAD,CAAOC,WAAY0C,MAChD,cAAC,IAAD,CAAOT,KAAK,SAASC,QAAS,cAACF,EAAD,MAC9B,cAAC,IAAD,CAAOC,KAAK,aAAaC,QAAS,cAACI,EAAD,MAClC,cAAC,IAAD,CAAOL,KAAK,WAAWC,QAAS,cAACK,EAAD,MAChC,cAAC,IAAD,CAAON,KAAK,IAAIC,QAAS,cAACrC,EAAD,WCvBjC+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAACiE,EAAD,UAINO,SAASC,eAAe,W","file":"static/js/main.65c53502.chunk.js","sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\n\n\nexport const store = configureStore({\n  reducer: {\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import './App.css';\n\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { Button, Navbar, IconName, Alignment } from \"@blueprintjs/core\";\n\nexport default function App() {\n  const navigate = useNavigate();\n\n  function createButton(name: string, icon: IconName, target: string) {\n    return <Button key={name} className=\"bp3-minimal\" icon={icon} text={name} onClick={() => navigate(target)}/>\n  }\n\n  const navigationButtons = [\n    createButton(\"Overview\", \"home\", \"/\"),\n    createButton(\"Data\", \"database\", \"/data\"),\n    createButton(\"Planning\", \"chart\", \"/planning\"),\n    createButton(\"Review\", \"endorsed\", \"/review\")\n  ]\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>Personal Finance</Navbar.Heading>\n          <Navbar.Divider />\n          {navigationButtons}\n        </Navbar.Group>\n\n        <Navbar.Group align={Alignment.RIGHT}>\n          <Button className=\"bp3-minimal bp3-icon-user\" />\n        </Navbar.Group>\n      </Navbar>\n\n      <div style={{ padding: \"0 50px\" }}>\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n","\nexport default function NotFound() {\n    return (<div>Page Not Found</div>);\n}\n","\nexport default function Overview() {\n    return (\n      <div>\n        <p>Things on this overview page include:</p>\n        <ul>\n            <li>Credit scores</li>\n            <li>Last reviewed date</li>\n            <li>Income for past year/quarter/month; and predicted income</li>\n            <li>Expenses by category for past year/quarter/month; and budget</li>\n            <li>Assets and debts; change over past year/quarter; and predicated</li>\n            <li>Goals and progress</li>\n        </ul>\n      </div>\n    );\n}\n","import { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login'\n\nexport default function Login({ onLoggedIn }:any) {\n    const [clientId, setClientId] = useState(\"\");\n\n    function onSuccess(result: any) {\n        console.log(\"Logged In\", result.profileObj);\n        onLoggedIn();\n    }\n\n    function onFailure(result: any) {\n        console.log(\"Login Failed\", result);\n    }\n\n    return (\n      <div>\n        <input type=\"text\" value={clientId} onChange={event => setClientId(event.target.value)} />\n\n        <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Authenticate With Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n        />\n      </div>\n    );\n}\n","import { ReactElement, useEffect, useState } from \"react\";\n\nimport { Tabs, TabId } from \"@blueprintjs/core\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NavigatingTabs({ name, defaultTab, children }: { name: string, defaultTab: TabId, children: ReactElement[] }) {\n    const navigate = useNavigate();\n    const [ selectedTabId, setSelectedTabId ] = useState(defaultTab as TabId);\n\n    useEffect(\n        () => navigate(selectedTabId.toString()),\n        [ navigate, selectedTabId ]\n    );\n\n    return (\n      <Tabs id={name} onChange={setSelectedTabId} selectedTabId={selectedTabId}>\n        {children}\n      </Tabs>\n    );\n}\n","import { Column, Table2 } from \"@blueprintjs/table\";\n\nexport default function Accounts() {\n    return <Table2 rowHeights={[ 35, 35, 35, 35, 35 ]} numRows={5} enableRowResizing={false} enableColumnResizing={false} enableMultipleSelection={false} enableColumnInteractionBar={false}>\n        <Column name=\"Column 1\" />\n        <Column name=\"Column 2\" />\n        <Column name=\"Column 3\" />\n    </Table2>\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport Accounts from './Accounts'\nimport NotFound from './NotFound'\n\nexport default function Data() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"accounts\" element={<Accounts />} />\n          <Route path=\"income\" element={<div>TBD - Income</div>} />\n          <Route path=\"recurring-payments\" element={<div>TBD - Recurring</div>} />\n          <Route path=\"investments\" element={<div>TBD - Investments</div>} />\n          <Route path=\"assets\" element={<div>TBD - Assets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Data\" defaultTab=\"accounts\">\n        <Tab id=\"accounts\" title=\"Accounts\" panel={<Outlet />} />\n        <Tab id=\"income\" title=\"Income\" panel={<Outlet />} />\n        <Tab id=\"recurring-payments\" title=\"Recurring Payments\" panel={<Outlet />} />\n        <Tab id=\"investments\" title=\"Investments\" panel={<Outlet />} />\n        <Tab id=\"assets\" title=\"Assets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Planning() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"goals\" element={<div>TBD - Goals </div>} />\n          <Route path=\"large-purchases\" element={<div>TBD - Large Purchases</div>} />\n          <Route path=\"budgets\" element={<div>TBD - Budgets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Planning\" defaultTab=\"goals\">\n        <Tab id=\"goals\" title=\"Goals\" panel={<Outlet />} />\n        <Tab id=\"large-purchases\" title=\"Large Purchases\" panel={<Outlet />} />\n        <Tab id=\"budgets\" title=\"Budgets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Review() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"balances\" element={<div>TBD - Balances</div>} />\n          <Route path=\"spending\" element={<div>TBD - Spending</div>} />\n          <Route path=\"monthly-clearing\" element={<div>TBD - Monthly Clearing</div>} />\n          <Route path=\"quarterly-review\" element={<div>TBD - Quarterly Review</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Review\" defaultTab=\"balances\">\n        <Tab id=\"balances\" title=\"Balances\" panel={<Outlet />} />\n        <Tab id=\"spending\" title=\"Spending\" panel={<Outlet />} />\n        <Tab id=\"monthly-clearing\" title=\"Monthly Clearing\" panel={<Outlet />} />\n        <Tab id=\"quarterly-review\" title=\"Quarterly Review\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { Routes as RoutesCollection, Route, useNavigate } from \"react-router-dom\";\n\nimport App from './App';\nimport NotFound from \"./containers/NotFound\";\n\nimport Overview from \"./containers/Overview\";\nimport Login from \"./containers/Login\";\nimport Data from \"./containers/Data\";\nimport Planning from \"./containers/Planning\";\nimport Review from \"./containers/Review\";\n\nexport default function Routes() {\n  const navigate = useNavigate();\n  const [ loggedIn, setLoggedIn ] = useState(false);\n\n  useEffect(\n    () => {\n      if (!loggedIn) {\n        navigate(\"login\");\n      }\n    },\n    [ navigate, loggedIn ]\n  );\n  \n  return (\n    <RoutesCollection>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Overview />} />\n        <Route path=\"login\" element={<Login onLoggedIn={setLoggedIn} />} />\n        <Route path=\"data/*\" element={<Data />} />\n        <Route path=\"planning/*\" element={<Planning />} />\n        <Route path=\"review/*\" element={<Review />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </RoutesCollection>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport Routes from './Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}