{"version":3,"sources":["features/credit-scores/CreditScoresSlice.ts","features/authentication/AuthenticationSlice.ts","app/Store.ts","features/authentication/UserMenuButton.tsx","features/authentication/LoginCard.tsx","App.tsx","features/credit-scores/CreditScoresCard.tsx","containers/Overview.tsx","components/NavigatingTabs.tsx","containers/Accounts.tsx","containers/NotFound.tsx","containers/Data.tsx","containers/Planning.tsx","containers/Review.tsx","Routes.tsx","index.tsx"],"names":["UserId","noDisconnectAction","initialState","isAuthenticated","disconnect","authenticationSlice","createSlice","name","reducers","setGoogleClientId","state","action","googleClientId","payload","logIn","profile","getBasicProfile","logOut","undefined","actions","scores","Map","Mark","timestamp","Date","score","source","Ivy","creditScoresSlice","updateScore","set","userId","newScore","store","configureStore","reducer","authentication","AuthenticationReducer","creditScores","CreditScoresReducer","connect","user","getGivenName","imageUrl","getImageUrl","dispatch","properties","userImage","className","style","width","height","src","alt","userMenu","icon","onClick","text","content","interactionKind","placement","minimal","margin","response","elevation","Elevation","THREE","disabled","clientId","buttonText","onSuccess","isGoogleLoginResponse","onFailure","result","console","log","cookiePolicy","isSignedIn","navigate","useNavigate","createButton","target","navigationButtons","Group","Heading","Divider","align","Alignment","RIGHT","UserMenuButton","padding","Array","from","entries","map","entry","creditScoreReport","sort","user1","user2","TWO","toDateString","Overview","flexDirection","mx","p","CreditScoresCard","NavigatingTabs","defaultTab","children","useState","selectedTabId","setSelectedTabId","useEffect","toString","id","onChange","Accounts","rowHeights","numRows","enableRowResizing","enableColumnResizing","enableMultipleSelection","enableColumnInteractionBar","NotFound","Layout","title","panel","Data","path","element","Planning","Review","Routes","index","baseUri","URL","document","baseURI","head","getElementsByTagName","namedItem","ReactDOM","render","StrictMode","basename","pathname","getElementById"],"mappings":"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","file":"static/js/main.de3b8a91.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum UserId {\n  Mark,\n  Ivy\n}\n\nexport interface CreditScoreReport {\n  timestamp: Date;\n  score: number;\n  source: string;\n}\n\nexport interface CreditScoreReportUpdate {\n  userId: UserId;\n  newScore: number;\n  source: string;\n}\n\nexport interface CreditScoresState {\n  scores: Map<UserId, CreditScoreReport>;\n}\n\n// TODO: Temporary data for testing\nconst initialState: CreditScoresState = {\n  scores: new Map<UserId, CreditScoreReport>([\n    [UserId.Mark, { timestamp: new Date(), score: 100, source: 'TransUnion' }],\n    [UserId.Ivy, { timestamp: new Date(), score: 200, source: 'Experian' }]\n  ])\n};\n\nexport const creditScoresSlice = createSlice({\n  name: 'creditScores',\n  initialState,\n  reducers: {\n    updateScore: (state, action: PayloadAction<CreditScoreReportUpdate>) => {\n      state.scores.set(action.payload.userId, {\n        timestamp: new Date(),\n        score: action.payload.newScore,\n        source: action.payload.source\n      });\n    }\n  }\n});\n\nexport default creditScoresSlice.reducer;\nexport const { updateScore } = creditScoresSlice.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GoogleLoginResponse } from 'react-google-login';\n\nexport interface BasicProfile {\n  getId(): string;\n  getEmail(): string;\n  getName(): string;\n  getGivenName(): string;\n  getFamilyName(): string;\n  getImageUrl(): string;\n}\n\nexport interface AuthenticationState {\n  googleClientId?: string;\n  isAuthenticated: boolean;\n  profile?: BasicProfile;\n  disconnect: () => void;\n}\n\nconst noDisconnectAction = () => {\n  // Intentionally empty function\n};\n\nconst initialState: AuthenticationState = {\n  isAuthenticated: false,\n  disconnect: noDisconnectAction\n};\n\nexport const authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState,\n  reducers: {\n    setGoogleClientId: (state, action: PayloadAction<string>) => {\n      state.googleClientId = action.payload;\n    },\n    logIn: (state, action: PayloadAction<GoogleLoginResponse>) => {\n      state.isAuthenticated = true;\n      state.profile = action.payload.getBasicProfile();\n      state.disconnect = action.payload.disconnect;\n    },\n    logOut: (state) => {\n      state.disconnect();\n\n      state.isAuthenticated = false;\n      state.profile = undefined;\n      state.disconnect = noDisconnectAction;\n    }\n  }\n});\n\nexport default authenticationSlice.reducer;\nexport const { logIn, logOut, setGoogleClientId } = authenticationSlice.actions;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport AuthenticationReducer from '../features/authentication/AuthenticationSlice';\nimport CreditScoresReducer from '../features/credit-scores/CreditScoresSlice';\n\nexport const store = configureStore({\n  reducer: {\n    authentication: AuthenticationReducer,\n    creditScores: CreditScoresReducer\n  }\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Menu, MenuItem } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport { RootState, AppDispatch } from '../../app/Store';\nimport { logOut } from './AuthenticationSlice';\n\nconst mapState = (state: RootState) => ({\n  isAuthenticated: state.authentication.isAuthenticated,\n  user: {\n    name: state.authentication.profile?.getGivenName() || 'unknown',\n    imageUrl: state.authentication.profile?.getImageUrl() || ''\n  }\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n  logOut: () => dispatch(logOut())\n});\n\ntype LoggedInUserButtonProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch>;\n\nconst LoggedInUserButton: FC<LoggedInUserButtonProperties> = (properties) => {\n  if (!properties.isAuthenticated) {\n    return <div />;\n  }\n\n  const userImage = (\n    <img\n      className=\"rounded\"\n      style={{ width: '25px', height: '25px' }}\n      src={properties.user.imageUrl}\n      alt=\"\"\n    />\n  );\n\n  const userMenu = (\n    <Menu>\n      <MenuItem icon=\"log-out\" onClick={properties.logOut} text=\"Log Out\" />\n    </Menu>\n  );\n\n  return (\n    <Popover2 content={userMenu} interactionKind=\"click\" placement=\"bottom-end\" minimal={true}>\n      <Button\n        style={{ margin: 0 }}\n        className=\"bp3-minimal\"\n        icon={userImage}\n        text={properties.user.name}\n      />\n    </Popover2>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(LoggedInUserButton);\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\n\nimport { RootState, AppDispatch } from '../../app/Store';\nimport { logIn } from './AuthenticationSlice';\n\nfunction isGoogleLoginResponse(\n  response: GoogleLoginResponse | GoogleLoginResponseOffline\n): response is GoogleLoginResponse {\n  return (response as GoogleLoginResponse).getBasicProfile !== undefined;\n}\n\nconst mapState = (state: RootState) => ({\n  googleClientId: state.authentication.googleClientId,\n  isAuthenticated: state.authentication.isAuthenticated\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n  logIn: (response: GoogleLoginResponse) => dispatch(logIn(response))\n});\n\ntype LoginCardProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch>;\n\nconst LoginCard: FC<LoginCardProperties> = (properties) => {\n  function onSuccess(response: GoogleLoginResponse | GoogleLoginResponseOffline) {\n    if (isGoogleLoginResponse(response)) {\n      properties.logIn(response);\n    }\n  }\n\n  function onFailure(result: unknown) {\n    console.log('Login Failed', result);\n  }\n\n  return (\n    <div className=\"loginCardContainer\">\n      <Card elevation={Elevation.THREE}>\n        <h2>Sign In</h2>\n        <p>Authentication is required to use this application.</p>\n\n        <div className=\"buttonContainer\">\n          <GoogleLogin\n            disabled={properties.googleClientId === undefined}\n            clientId={properties.googleClientId || ''}\n            buttonText=\"Authenticate With Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(LoginCard);\n","import './App.css';\n\nimport { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nimport { Button, Navbar, IconName, Alignment } from '@blueprintjs/core';\n\nimport { RootState } from './app/Store';\nimport UserMenuButton from './features/authentication/UserMenuButton';\nimport LoginCard from './features/authentication/LoginCard';\n\nconst mapState = (state: RootState) => ({\n  isAuthenticated: state.authentication.isAuthenticated\n});\n\ntype AppProperties = ReturnType<typeof mapState>;\n\nconst App: FC<AppProperties> = (properties) => {\n  const navigate = useNavigate();\n\n  function createButton(name: string, icon: IconName, target: string) {\n    return (\n      <Button\n        key={name}\n        className=\"bp3-minimal\"\n        icon={icon}\n        text={name}\n        disabled={!properties.isAuthenticated}\n        onClick={() => navigate(target)}\n      />\n    );\n  }\n\n  const navigationButtons = [\n    createButton('Overview', 'home', '/'),\n    createButton('Data', 'database', '/data'),\n    createButton('Planning', 'chart', '/planning'),\n    createButton('Review', 'endorsed', '/review')\n  ];\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>Personal Finance</Navbar.Heading>\n          <Navbar.Divider />\n          {navigationButtons}\n        </Navbar.Group>\n\n        <Navbar.Group align={Alignment.RIGHT}>\n          <UserMenuButton />\n        </Navbar.Group>\n      </Navbar>\n\n      <div style={{ padding: '0 50px' }}>\n        {properties.isAuthenticated ? <Outlet /> : <LoginCard />}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapState)(App);\n","import { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card, Elevation } from '@blueprintjs/core';\n\nimport { RootState } from '../../app/Store';\n\nconst mapState = (state: RootState) => ({\n  scores: Array.from(state.creditScores.scores.entries())\n    .map((entry) => ({ userId: entry[0], creditScoreReport: entry[1] }))\n    .sort((user1, user2) => user1.userId - user2.userId)\n});\n\ntype CreditScoresProperties = ReturnType<typeof mapState>;\n\nconst CreditScores: FC<CreditScoresProperties> = (properties) => {\n  return (\n    <Card elevation={Elevation.TWO}>\n      <h1>Credit Scores</h1>\n      {properties.scores.map((score) => (\n        <p>\n          {score.userId}: {score.creditScoreReport.score} (\n          {score.creditScoreReport.timestamp.toDateString()})\n        </p>\n      ))}\n    </Card>\n  );\n};\n\nexport default connect(mapState)(CreditScores);\n","import { FC } from 'react';\n\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { Flex, Box } from 'reflexbox';\n\nimport CreditScoresCard from '../features/credit-scores/CreditScoresCard';\n\nconst Overview: FC = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex>\n        <Box mx={2} p={2} width={1 / 3}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Tasks</h1>\n            <p>TBD - Last Reviewed / Next Review / Notes / Tasks</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 3}>\n          <CreditScoresCard />\n        </Box>\n        <Box mx={2} p={2} width={1 / 3}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Net Worth</h1>\n            <p>TBD - Summary and chart</p>\n          </Card>\n        </Box>\n      </Flex>\n\n      <Flex>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Cash Flow</h1>\n            <p>TBD - Income / Expenses</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Assets and Debts</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n      </Flex>\n\n      <Flex>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Goals</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n        <Box mx={2} p={2} width={1 / 2}>\n          <Card elevation={Elevation.TWO}>\n            <h1>Budget</h1>\n            <p>Coming Soon</p>\n          </Card>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Overview;\n","import { FC } from 'react';\nimport { ReactElement, useEffect, useState } from 'react';\n\nimport { Tabs, TabId } from '@blueprintjs/core';\nimport { useNavigate } from 'react-router-dom';\n\nexport type NavigatingTabsProperties = {\n  name: string;\n  defaultTab: TabId;\n  children: ReactElement[];\n};\n\nconst NavigatingTabs: FC<NavigatingTabsProperties> = ({ name, defaultTab, children }) => {\n  const navigate = useNavigate();\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab as TabId);\n\n  useEffect(() => navigate(selectedTabId.toString()), [navigate, selectedTabId]);\n\n  return (\n    <Tabs id={name} onChange={setSelectedTabId} selectedTabId={selectedTabId}>\n      {children}\n    </Tabs>\n  );\n};\n\nexport default NavigatingTabs;\n","import { FC } from 'react';\n\nimport { Column, Table2 } from '@blueprintjs/table';\n\nconst Accounts: FC = () => {\n  return (\n    <Table2\n      rowHeights={[35, 35, 35, 35, 35]}\n      numRows={5}\n      enableRowResizing={false}\n      enableColumnResizing={false}\n      enableMultipleSelection={false}\n      enableColumnInteractionBar={false}>\n      <Column name=\"Column 1\" />\n      <Column name=\"Column 2\" />\n      <Column name=\"Column 3\" />\n    </Table2>\n  );\n};\n\nexport default Accounts;\n","import { FC } from 'react';\n\nconst NotFound: FC = () => {\n  return <div>Page Not Found</div>;\n};\n\nexport default NotFound;\n","import { FC } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport Accounts from './Accounts';\nimport NotFound from './NotFound';\n\nconst Data: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"accounts\" element={<Accounts />} />\n        <Route path=\"income\" element={<div>TBD - Income</div>} />\n        <Route path=\"recurring-payments\" element={<div>TBD - Recurring</div>} />\n        <Route path=\"investments\" element={<div>TBD - Investments</div>} />\n        <Route path=\"assets\" element={<div>TBD - Assets</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n};\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Data\" defaultTab=\"accounts\">\n      <Tab id=\"accounts\" title=\"Accounts\" panel={<Outlet />} />\n      <Tab id=\"income\" title=\"Income\" panel={<Outlet />} />\n      <Tab id=\"recurring-payments\" title=\"Recurring Payments\" panel={<Outlet />} />\n      <Tab id=\"investments\" title=\"Investments\" panel={<Outlet />} />\n      <Tab id=\"assets\" title=\"Assets\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n\nexport default Data;\n","import { FC } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport NotFound from './NotFound';\n\nconst Planning: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"goals\" element={<div>TBD - Goals </div>} />\n        <Route path=\"large-purchases\" element={<div>TBD - Large Purchases</div>} />\n        <Route path=\"budgets\" element={<div>TBD - Budgets</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n};\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Planning\" defaultTab=\"goals\">\n      <Tab id=\"goals\" title=\"Goals\" panel={<Outlet />} />\n      <Tab id=\"large-purchases\" title=\"Large Purchases\" panel={<Outlet />} />\n      <Tab id=\"budgets\" title=\"Budgets\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n\nexport default Planning;\n","import { FC } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\n\nimport { Tab } from '@blueprintjs/core';\n\nimport NavigatingTabs from '../components/NavigatingTabs';\n\nimport NotFound from './NotFound';\n\nconst Review: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"balances\" element={<div>TBD - Balances</div>} />\n        <Route path=\"spending\" element={<div>TBD - Spending</div>} />\n        <Route path=\"monthly-clearing\" element={<div>TBD - Monthly Clearing</div>} />\n        <Route path=\"quarterly-review\" element={<div>TBD - Quarterly Review</div>} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n};\n\nfunction Layout() {\n  return (\n    <NavigatingTabs name=\"Review\" defaultTab=\"balances\">\n      <Tab id=\"balances\" title=\"Balances\" panel={<Outlet />} />\n      <Tab id=\"spending\" title=\"Spending\" panel={<Outlet />} />\n      <Tab id=\"monthly-clearing\" title=\"Monthly Clearing\" panel={<Outlet />} />\n      <Tab id=\"quarterly-review\" title=\"Quarterly Review\" panel={<Outlet />} />\n    </NavigatingTabs>\n  );\n}\n\nexport default Review;\n","import { FC } from 'react';\nimport { Routes as RoutesCollection, Route } from 'react-router-dom';\n\nimport App from './App';\n\nimport Overview from './containers/Overview';\nimport Data from './containers/Data';\nimport Planning from './containers/Planning';\nimport Review from './containers/Review';\nimport NotFound from './containers/NotFound';\n\nconst Routes: FC = () => {\n  return (\n    <RoutesCollection>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Overview />} />\n        <Route path=\"data/*\" element={<Data />} />\n        <Route path=\"planning/*\" element={<Planning />} />\n        <Route path=\"review/*\" element={<Review />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </RoutesCollection>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport { store } from './app/Store';\nimport Routes from './Routes';\nimport { setGoogleClientId } from './features/authentication/AuthenticationSlice';\n\nconst baseUri = new URL(document.baseURI);\nconst metaTags = document.head.getElementsByTagName('meta');\nconst googleClientId = metaTags.namedItem('google-signin-client_id')?.content || '';\n\nstore.dispatch(setGoogleClientId(googleClientId));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={baseUri.pathname}>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}