{"version":3,"sources":["features/authentication/authenticationSlice.ts","app/store.ts","features/authentication/LoggedInUserButton.tsx","features/authentication/LoginCard.tsx","App.tsx","containers/NotFound.tsx","containers/Overview.tsx","components/NavigatingTabs.tsx","containers/Accounts.tsx","containers/Data.tsx","containers/Planning.tsx","containers/Review.tsx","Routes.tsx","index.tsx"],"names":["authenticationSlice","createSlice","name","initialState","isAuthenticated","profile","reducers","logIn","state","action","payload","logOut","actions","store","configureStore","reducer","authentication","authenticationReducer","connect","user","getGivenName","imageUrl","getImageUrl","dispatch","properties","userImage","className","src","alt","userMenu","icon","onClick","text","content","interactionKind","placement","minimal","style","margin","elevation","Elevation","THREE","clientId","buttonText","onSuccess","result","console","log","profileObj","getBasicProfile","onFailure","cookiePolicy","isSignedIn","navigate","useNavigate","createButton","target","disabled","navigationButtons","Group","Heading","Divider","align","Alignment","RIGHT","padding","NotFound","Overview","NavigatingTabs","defaultTab","children","useState","selectedTabId","setSelectedTabId","useEffect","toString","id","onChange","Accounts","rowHeights","numRows","enableRowResizing","enableColumnResizing","enableMultipleSelection","enableColumnInteractionBar","Data","path","element","Layout","title","panel","Planning","Review","Routes","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61ac856d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface BasicProfile {\n    getId(): string;\n    getEmail(): string;\n    getName(): string;\n    getGivenName(): string;\n    getFamilyName(): string;\n    getImageUrl(): string;\n}\n  \nexport interface AuthenticationState {\n    isAuthenticated: boolean,\n    profile: BasicProfile | null\n}\n\nconst initialState: AuthenticationState = {\n    isAuthenticated: false,\n    profile: null\n};\n\nexport const authenticationSlice = createSlice({\n    name: 'authentication',\n    initialState,\n    reducers: {\n        logIn: (state, action: PayloadAction<BasicProfile>) => {\n            state.isAuthenticated = true;\n            state.profile = action.payload;\n        },\n        logOut: (state) => {\n            state.isAuthenticated = false;\n            state.profile = null;\n        }\n    }\n});\n\nexport default authenticationSlice.reducer;\nexport const { logIn, logOut } = authenticationSlice.actions;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport authenticationReducer from '../features/authentication/authenticationSlice';\n\nexport const store = configureStore({\n  reducer: {\n    authentication: authenticationReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { connect } from \"react-redux\";\n\nimport { Button, Menu, MenuItem } from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\n\nimport { RootState, AppDispatch } from '../../app/store';\nimport { logOut } from \"./authenticationSlice\";\n\nconst mapState = (state: RootState) => ({\n    isAuthenticated: state.authentication.isAuthenticated,\n    user: {\n      name: state.authentication.profile?.getGivenName() || \"unknown\",\n      imageUrl: state.authentication.profile?.getImageUrl() || \"\"\n    }\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    logOut: () => dispatch(logOut())\n});\n\ntype LoggedInUserButtonProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst LoggedInUserButton = (properties: LoggedInUserButtonProperties) => {\n    if (!properties.isAuthenticated) {\n        return <div />;\n    }\n    \n    const userImage = <img className=\"rounded\" src={properties.user.imageUrl} alt=\"\" />;\n\n    const userMenu = (\n      <Menu>\n        <MenuItem icon=\"log-out\" onClick={properties.logOut} text=\"Log Out\" />\n      </Menu>\n    );\n\n    return (\n      <Popover2\n        content={userMenu}\n        interactionKind=\"click\"\n        placement=\"bottom-end\"\n        minimal={true}>\n          <Button style={{ margin: 0}} className=\"bp3-minimal\" icon={userImage} text={properties.user.name} />\n      </Popover2>\n    );\n};\n\nexport default connect(mapState, mapDispatch)(LoggedInUserButton);\n","import { connect } from 'react-redux';\n\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { GoogleLogin } from 'react-google-login';\n\nimport { RootState, AppDispatch } from '../../app/store';\nimport { BasicProfile, logIn } from './authenticationSlice';\n\nconst mapState = (state: RootState) => ({\n    isAuthenticated: state.authentication.isAuthenticated\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    logIn: (profile: BasicProfile) => dispatch(logIn(profile))\n});\n\ntype LoginCardProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst LoginCard = (properties: LoginCardProperties) => {\n    const clientId = \"279418559001-t7d7c0hmaii6sd2ob4a87at6qujlmfb9.apps.googleusercontent.com\";\n\n    function onSuccess(result: any) {\n      console.log(\"Logged In\", result.profileObj);\n      properties.logIn(result.profileObj.getBasicProfile());\n    }\n\n    function onFailure(result: any) {\n      console.log(\"Login Failed\", result);\n    }\n\n    return (\n      <div className='loginCardContainer'>\n        <Card elevation={Elevation.THREE}>\n          <h2>Sign In</h2>\n          <p>Authentication is required to use this application.</p>\n\n          <div className=\"buttonContainer\">\n            <GoogleLogin\n              clientId={clientId}\n              buttonText='Authenticate With Google'\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n              cookiePolicy={'single_host_origin'}\n              isSignedIn={false} />\n            </div>\n        </Card>\n      </div>\n    );\n};\n\nexport default connect(mapState, mapDispatch)(LoginCard);\n","import './App.css';\n\nimport { connect } from 'react-redux';\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { Button, Navbar, IconName, Alignment } from \"@blueprintjs/core\";\n\nimport LoggedInUserButton from './features/authentication/LoggedInUserButton';\nimport LoginCard from './features/authentication/LoginCard';\nimport { RootState, AppDispatch } from './app/store';\n\nconst mapState = (state: RootState) => ({\n    isAuthenticated: state.authentication.isAuthenticated\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({});\n\ntype AppProperties = ReturnType<typeof mapState> & ReturnType<typeof mapDispatch> & { }\n\nconst App = (properties: AppProperties) => {\n  const navigate = useNavigate();\n\n  function createButton(name: string, icon: IconName, target: string) {\n    return <Button key={name} className=\"bp3-minimal\" icon={icon} text={name} disabled={!properties.isAuthenticated} onClick={() => navigate(target)}/>\n  }\n\n  const navigationButtons = [\n    createButton(\"Overview\", \"home\", \"/\"),\n    createButton(\"Data\", \"database\", \"/data\"),\n    createButton(\"Planning\", \"chart\", \"/planning\"),\n    createButton(\"Review\", \"endorsed\", \"/review\")\n  ]\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>Personal Finance</Navbar.Heading>\n          <Navbar.Divider />\n          {navigationButtons}\n        </Navbar.Group>\n\n        <Navbar.Group align={Alignment.RIGHT}>\n          <LoggedInUserButton />\n        </Navbar.Group>\n      </Navbar>\n\n      <div style={{ padding: \"0 50px\" }}>\n        { properties.isAuthenticated ? <Outlet /> : <LoginCard /> }\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapState, mapDispatch)(App);\n","\nexport default function NotFound() {\n    return (<div>Page Not Found</div>);\n}\n","\nexport default function Overview() {\n    return (\n      <div>\n        <p>Things on this overview page include:</p>\n        <ul>\n            <li>Credit scores</li>\n            <li>Last reviewed date</li>\n            <li>Income for past year/quarter/month; and predicted income</li>\n            <li>Expenses by category for past year/quarter/month; and budget</li>\n            <li>Assets and debts; change over past year/quarter; and predicated</li>\n            <li>Goals and progress</li>\n        </ul>\n      </div>\n    );\n}\n","import { ReactElement, useEffect, useState } from \"react\";\n\nimport { Tabs, TabId } from \"@blueprintjs/core\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NavigatingTabs({ name, defaultTab, children }: { name: string, defaultTab: TabId, children: ReactElement[] }) {\n    const navigate = useNavigate();\n    const [ selectedTabId, setSelectedTabId ] = useState(defaultTab as TabId);\n\n    useEffect(\n        () => navigate(selectedTabId.toString()),\n        [ navigate, selectedTabId ]\n    );\n\n    return (\n      <Tabs id={name} onChange={setSelectedTabId} selectedTabId={selectedTabId}>\n        {children}\n      </Tabs>\n    );\n}\n","import { Column, Table2 } from \"@blueprintjs/table\";\n\nexport default function Accounts() {\n    return <Table2 rowHeights={[ 35, 35, 35, 35, 35 ]} numRows={5} enableRowResizing={false} enableColumnResizing={false} enableMultipleSelection={false} enableColumnInteractionBar={false}>\n        <Column name=\"Column 1\" />\n        <Column name=\"Column 2\" />\n        <Column name=\"Column 3\" />\n    </Table2>\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport Accounts from './Accounts'\nimport NotFound from './NotFound'\n\nexport default function Data() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"accounts\" element={<Accounts />} />\n          <Route path=\"income\" element={<div>TBD - Income</div>} />\n          <Route path=\"recurring-payments\" element={<div>TBD - Recurring</div>} />\n          <Route path=\"investments\" element={<div>TBD - Investments</div>} />\n          <Route path=\"assets\" element={<div>TBD - Assets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Data\" defaultTab=\"accounts\">\n        <Tab id=\"accounts\" title=\"Accounts\" panel={<Outlet />} />\n        <Tab id=\"income\" title=\"Income\" panel={<Outlet />} />\n        <Tab id=\"recurring-payments\" title=\"Recurring Payments\" panel={<Outlet />} />\n        <Tab id=\"investments\" title=\"Investments\" panel={<Outlet />} />\n        <Tab id=\"assets\" title=\"Assets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Planning() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"goals\" element={<div>TBD - Goals </div>} />\n          <Route path=\"large-purchases\" element={<div>TBD - Large Purchases</div>} />\n          <Route path=\"budgets\" element={<div>TBD - Budgets</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Planning\" defaultTab=\"goals\">\n        <Tab id=\"goals\" title=\"Goals\" panel={<Outlet />} />\n        <Tab id=\"large-purchases\" title=\"Large Purchases\" panel={<Outlet />} />\n        <Tab id=\"budgets\" title=\"Budgets\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes, Route, Outlet } from \"react-router-dom\";\nimport { Tab } from \"@blueprintjs/core\";\nimport NavigatingTabs from '../components/NavigatingTabs'\n\nimport NotFound from './NotFound'\n\nexport default function Review() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"balances\" element={<div>TBD - Balances</div>} />\n          <Route path=\"spending\" element={<div>TBD - Spending</div>} />\n          <Route path=\"monthly-clearing\" element={<div>TBD - Monthly Clearing</div>} />\n          <Route path=\"quarterly-review\" element={<div>TBD - Quarterly Review</div>} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    )\n}\n\nfunction Layout() {\n    return (\n      <NavigatingTabs name=\"Review\" defaultTab=\"balances\">\n        <Tab id=\"balances\" title=\"Balances\" panel={<Outlet />} />\n        <Tab id=\"spending\" title=\"Spending\" panel={<Outlet />} />\n        <Tab id=\"monthly-clearing\" title=\"Monthly Clearing\" panel={<Outlet />} />\n        <Tab id=\"quarterly-review\" title=\"Quarterly Review\" panel={<Outlet />} />\n      </NavigatingTabs>\n    );\n}\n","import { Routes as RoutesCollection, Route } from \"react-router-dom\";\n\nimport App from './App';\nimport NotFound from \"./containers/NotFound\";\n\nimport Overview from \"./containers/Overview\";\nimport Data from \"./containers/Data\";\nimport Planning from \"./containers/Planning\";\nimport Review from \"./containers/Review\";\n\nexport default function Routes() {\n  return (\n    <RoutesCollection>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Overview />} />\n        <Route path=\"data/*\" element={<Data />} />\n        <Route path=\"planning/*\" element={<Planning />} />\n        <Route path=\"review/*\" element={<Review />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </RoutesCollection>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport Routes from './Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}